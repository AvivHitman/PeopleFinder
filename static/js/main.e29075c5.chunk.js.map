{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","constant.js","components/User/style.js","components/User/User.js","utils.js","hooks/useUsersList.js","hooks/usePeopleFetch.js","components/Search/style.js","components/Search/Search.js","components/UserList/UserList.js","pages/style.js","pages/Home/Home.js","components/UserList/FavoritesList.js","hooks/useFavoritesList.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","store/index.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","component","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","FormControlLabel","control","Checkbox","checked","UserList","List","SpinnerWrapper","Filters","EmptyListText","p","COUNTRIES","nationality","country","PATHS","location","STORAGE_KEY_FAVORITE_USERS","User","UserInfo","UserPicture","img","IconButtonWrapper","isVisible","index","usersLength","user","lastUserElementRef","useState","isHovered","setIsHovered","favoritesUsers","useSelector","state","dispatch","useDispatch","onMouseEnter","onMouseLeave","ref","src","picture","large","alt","name","title","first","last","email","street","number","city","onClick","type","includes","payload","handleFavoriteClicked","IconButton","setPersistentUsersData","users","localStorage","setItem","JSON","stringify","useUsersList","countriesToFilter","setCountriesToFilter","pageNumber","setPageNumber","searchValue","setSearchValue","natFilterQueryParam","fetchedUsers","setFetchedUsers","isLoading","setIsLoading","hasMore","setHasMore","useEffect","fetchUsers","a","axios","get","response","prevUsers","data","results","length","console","error","usePeopleFetch","toString","usersToDisplay","filter","toLowerCase","getUsersBySearchValue","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","handleCheckBoxClicked","handleSearch","event","target","value","Search","TextField","fullWidth","margin","map","UsersPage","Content","Header","Home","FavoritesList","nat","useFavoritesList","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","primary","main","CssBaseline","NavBar","setValue","history","useHistory","push","pathname","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","path","Tab","usersFromLocalStorage","parse","getItem","store","createStore","action","newState","concat","AppRouter","exact","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e29075c5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography component={\"span\"}>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label }) => (\n  <S.CheckBox>\n    <FormControlLabel\n      control={<Checkbox checked={isChecked} onChange={onChange} color=\"primary\" />}\n      label={label}\n    />\n  </S.CheckBox>\n);\n\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n\nexport const EmptyListText = styled.p`\n  text-align: center;\n  font-size: 20px;\n  justify-content: center;\n  font-weight: bold;\n`;\n\n","export const SIZE = {\n  small: \"small\",\n  medium: \"medium\",\n  large: \"large\"\n};\n\nexport const VARIANT = {\n  text: \"text\",\n  filled: \"filled\",\n  outlined: \"outlined\",\n  standard: \"standard\",\n  contained: \"contained\"\n};\n\nexport const COLORS = {\n  default: \"default\",\n  inherit: \"inherit\",\n  primary: \"primary\",\n  secondary: \"secondary\"\n};\n\nexport const COUNTRIES = [\n  { nationality: \"BR\", country: \"Brazil\" },\n  { nationality: \"AU\", country: \"Australia\" },\n  { nationality: \"CA\", country: \"Canada\" },\n  { nationality: \"FR\", country: \"France\" },\n  { nationality: \"DE\", country: \"Germany\" }\n];\n\nexport const PATHS = [\n  { label: \"Home\", location: \"/\" },\n  { label: \"Favorites\", location: \"/favorites\" }\n];\n\nexport const STORAGE_KEY_FAVORITE_USERS = \"favoritesUsers\";\n\nexport const FETCH_USERS_URL = `https://randomuser.me/api/?results=25`;\n","import styled from \"styled-components\";\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\n\n","import * as S from \"./style\";\nimport Text from \"../Text\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst User = ({ index, usersLength, user, lastUserElementRef}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const favoritesUsers = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const handleFavoriteClicked = (user) => {\n    dispatch({ type: favoritesUsers.includes(user) ? \"REMOVE_FAV_USERS\" : \"SAVE_FAV_USERS\", payload: user });\n  };\n\n  return (\n    <S.User\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      ref={index + 1 === usersLength ? lastUserElementRef : null}>\n\n      <S.UserPicture src={user.picture.large} alt=\"\" />\n      <S.UserInfo>\n        <Text size=\"22px\" bold>\n          {user.name.title} {user.name.first} {user.name.last}\n        </Text>\n        <Text size=\"14px\">{user.email}</Text>\n        <Text size=\"14px\">\n          {user.location.street.number} {user.location.street.name}\n        </Text>\n        <Text size=\"14px\">\n          {user.location.city} {user.location.country}\n        </Text>\n      </S.UserInfo>\n      <S.IconButtonWrapper isVisible={isHovered}\n                           onClick={() => handleFavoriteClicked(user)}>\n        <IconButton>\n          <FavoriteIcon color=\"error\" />\n        </IconButton>\n      </S.IconButtonWrapper>\n    </S.User>\n\n  );\n\n};\nexport default User;\n\n","import { STORAGE_KEY_FAVORITE_USERS } from \"./constant\";\n\nexport const getPersistentUsersData = () => {\n  return JSON.parse(localStorage.getItem(STORAGE_KEY_FAVORITE_USERS));\n};\n\nexport const setPersistentUsersData = (users) => {\n  localStorage.setItem(STORAGE_KEY_FAVORITE_USERS, JSON.stringify(users));\n};\n\nexport const getUsersBySearchValue = (users, searchValue) => {\n  return searchValue ? users.filter((user) => user.name.first.toLowerCase().includes(searchValue) ||\n    user.name.last.toLowerCase().includes(searchValue)) : users\n}\n","import { useCallback, useRef, useState } from \"react\";\nimport { usePeopleFetch } from \"./usePeopleFetch\";\nimport { getUsersBySearchValue } from \"../utils\";\n\nexport const useUsersList = () => {\n  const [countriesToFilter, setCountriesToFilter] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchValue, setSearchValue] = useState()\n  const natFilterQueryParam = `&nat=${countriesToFilter.toString()}`;\n  const { fetchedUsers, isLoading, hasMore } = usePeopleFetch(pageNumber, natFilterQueryParam, searchValue);\n  const usersToDisplay = getUsersBySearchValue(fetchedUsers, searchValue);\n  const observer = useRef();\n\n  const lastUserElementRef = useCallback(node => {\n    if (isLoading) return;\n    if (observer.current)\n      observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node)\n      observer.current.observe(node);\n  }, [isLoading, hasMore]);\n\n  const handleCheckBoxClicked = (nationality, isChecked) => {\n    setCountriesToFilter(!isChecked ? [...countriesToFilter, nationality]\n      : countriesToFilter.filter((country) => country !== nationality));\n  };\n\n  const handleSearch = (event) => {\n    setSearchValue(event.target.value)\n    setPageNumber(1)\n  }\n\n  return { usersToDisplay, lastUserElementRef, countriesToFilter, isLoading, fetchedUsers, handleCheckBoxClicked, handleSearch }\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FETCH_USERS_URL } from \"../constant\";\n\nexport const usePeopleFetch = (pageNumber, natFilterQueryParam) => {\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false)\n\n  useEffect( () => {\n    fetchUsers()\n  }, [pageNumber]);\n\n  useEffect( () => {\n    setFetchedUsers([]);\n    fetchUsers()\n  }, [natFilterQueryParam]);\n\n\n\n  const fetchUsers = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(FETCH_USERS_URL  + natFilterQueryParam);\n      setFetchedUsers(prevUsers => {\n         return [...prevUsers, ...response.data.results];\n      })\n      setHasMore(response.data.results.length > 0)\n      setIsLoading(false)\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return { fetchedUsers, isLoading, hasMore };\n};\n","import styled from \"styled-components\";\n\nexport const Search = styled.div``;\n","import React from \"react\";\nimport * as S from \"./style\";\nimport { TextField } from \"@material-ui/core\";\n\nconst Search = ({ onChange, label }) => (\n    <S.Search>\n      <TextField fullWidth margin=\"normal\" variant=\"standard\" onChange={onChange} label={label} />\n    </S.Search>\n  );\n\n\nexport default Search;\n","import React from \"react\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport * as S from \"./style\";\nimport { COUNTRIES } from \"../../constant\";\nimport User from \"../User\";\nimport { useUsersList } from \"../../hooks\";\nimport Search from \"../Search\";\n\nconst UserList = () => {\n  const {\n    usersToDisplay,\n    lastUserElementRef,\n    countriesToFilter,\n    isLoading,\n    fetchedUsers,\n    handleCheckBoxClicked,\n    handleSearch\n  } = useUsersList();\n\n  return (\n    <S.UserList>\n      <Search label=\"Search by name\" onChange={handleSearch} />\n      <S.Filters>\n        {COUNTRIES.map(({ nationality, country, index }) => {\n          const isChecked = countriesToFilter.includes(nationality);\n          return <CheckBox key={index} value={nationality} label={country} checked={isChecked} onChange={() => {\n            handleCheckBoxClicked(nationality, isChecked);\n          }} />;\n        })}\n      </S.Filters>\n      <S.List>\n        {usersToDisplay.length === 0 && !isLoading ? <S.EmptyListText> No Matched Users Found </S.EmptyListText> :\n          (usersToDisplay.map((user, index) => {\n            return (\n              <User key={index} index={index} usersLength={fetchedUsers.length} user={user}\n                    lastUserElementRef={lastUserElementRef} />);\n          }))}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const UsersPage = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport * as S from \"../style\";\n\nconst Home = () => (\n    <S.UsersPage>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n          <UserList />\n      </S.Content>\n    </S.UsersPage>\n  );\n\nexport default Home;\n","import React from \"react\";\nimport CheckBox from \"components/CheckBox\";\nimport * as S from \"./style\";\nimport { COUNTRIES } from \"../../constant\";\nimport User from \"../User\";\nimport { useFavoritesList } from \"../../hooks\";\n\nconst FavoritesList = () => {\n  const { usersToDisplay, countriesToFilter, handleCheckBoxClicked } = useFavoritesList();\n  return (\n    <S.UserList>\n      <S.Filters>\n        {COUNTRIES.map(({ nationality, country, index }) => {\n          const isChecked = countriesToFilter.includes(nationality);\n          return <CheckBox key={index} value={nationality} label={country} checked={isChecked} onChange={() => {\n            handleCheckBoxClicked(nationality, isChecked);\n          }} />;\n        })}\n      </S.Filters>\n      <S.List>\n        {usersToDisplay.length === 0 ? <S.EmptyListText> There is No Favorites Users</S.EmptyListText>\n          : (usersToDisplay.map((user, index) => {\n            return (\n              <User key={index} index={index} user={user} />\n            );\n          }))}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default FavoritesList;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const useFavoritesList = () => {\n  const favoritesUsers = useSelector((state) => state);\n  const [countriesToFilter, setCountriesToFilter] = useState([]);\n  const usersToDisplay = (countriesToFilter.length === 0 ? favoritesUsers : favoritesUsers.filter((user) => countriesToFilter.includes(user.nat)));\n\n  const handleCheckBoxClicked = (nationality, isChecked) => {\n    setCountriesToFilter(!isChecked ? [...countriesToFilter, nationality]\n      : countriesToFilter.filter((country) => country !== nationality));\n  };\n\n  return { usersToDisplay, countriesToFilter, handleCheckBoxClicked };\n};\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport * as S from \"../style\";\nimport FavoritesList from \"../../components/UserList/FavoritesList\";\n\nconst Favorites = () => (\n    <S.UsersPage>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <FavoritesList  />\n      </S.Content>\n    </S.UsersPage>\n  );\n\nexport default Favorites;\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { useHistory } from \"react-router\";\nimport { PATHS } from \"../../constant\";\nimport { Tab } from \"@material-ui/core\";\n\nconst NavBar = () => {\n  const [value, setValue] = useState(0);\n  const history = useHistory();\n\n  const handleChange = (_e, newValue) => {\n    if (newValue === value) return;\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    history.push(PATHS[value].location);\n    if (history.location.pathname != PATHS[value].location)\n      history.push(\"/\");\n  }, [value]);\n\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        {PATHS.map((path, index) => {\n          return <Tab key={index} label={path.label} index={index} />;\n        })}\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import { createStore } from \"redux\";\nimport { getPersistentUsersData, setPersistentUsersData } from \"../utils\";\n\nconst usersFromLocalStorage = getPersistentUsersData();\n\nconst favoriteUsersReducer = (state = usersFromLocalStorage, action) => {\n  switch (action.type) {\n    case 'REMOVE_FAV_USERS':\n      const newState = state.filter(user => user !== action.payload);\n      setPersistentUsersData(newState);\n      return newState;\n\n    case 'SAVE_FAV_USERS':\n      if (!state.includes(action.payload)) {\n        const newState = state.concat(action.payload)\n        setPersistentUsersData(newState);\n        return newState;\n      }\n      else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}\nconst store = createStore(favoriteUsersReducer);\n\nexport default store;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Favorites } from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Provider store={store}>\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/favorites\" component={Favorites} />\n          </Switch>\n        </Router>\n      </Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}